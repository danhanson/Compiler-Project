// Generated from MiniJava.g4 by ANTLR 4.5.2

    package parser;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MiniJavaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, TRUE=41, FALSE=42, COMMENT=43, WHITE_SPACE=44, INTEGER=45, 
		RESERVED_WORD=46, ID=47, OPERATOR=48, DELIMETER=49;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "TRUE", 
		"FALSE", "LETTER", "DIGIT", "NON_ZERO_DIGIT", "COMMENT", "WHITE_SPACE", 
		"INTEGER", "RESERVED_WORD", "ID", "OPERATOR", "DELIMETER"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'class'", "'extends'", "'{'", "'}'", "'public'", "'('", "')'", 
		"'static'", "'void'", "'main'", "'String'", "'['", "']'", "','", "'='", 
		"';'", "'int'", "'boolean'", "'while'", "'System.out.println'", "'return'", 
		"'if'", "'else'", "'new'", "'this'", "'null'", "'.'", "'-'", "'!'", "'/'", 
		"'*'", "'+'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", "'&&'", "'||'", 
		"'true'", "'false'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, "TRUE", "FALSE", "COMMENT", "WHITE_SPACE", 
		"INTEGER", "RESERVED_WORD", "ID", "OPERATOR", "DELIMETER"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MiniJavaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MiniJava.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 45:
			COMMENT_action((RuleContext)_localctx, actionIndex);
			break;
		case 46:
			WHITE_SPACE_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:
			skip();
			break;
		}
	}
	private void WHITE_SPACE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1:
			skip();
			break;
		}
	}

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\63\u01ce\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t"+
		"\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f"+
		"\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3"+
		"\21\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3"+
		"\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3"+
		"\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3"+
		"\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3"+
		"\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3"+
		"\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3$\3%\3%\3%\3"+
		"&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3"+
		"+\3,\5,\u011b\n,\3-\3-\3.\3.\3/\3/\3/\3/\7/\u0125\n/\f/\16/\u0128\13/"+
		"\3/\3/\3/\3/\7/\u012e\n/\f/\16/\u0131\13/\3/\3/\5/\u0135\n/\3/\3/\3\60"+
		"\6\60\u013a\n\60\r\60\16\60\u013b\3\60\3\60\3\61\3\61\3\61\7\61\u0143"+
		"\n\61\f\61\16\61\u0146\13\61\5\61\u0148\n\61\3\62\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\5\62\u01ad\n\62\3\63"+
		"\3\63\3\63\7\63\u01b2\n\63\f\63\16\63\u01b5\13\63\3\64\3\64\3\64\3\64"+
		"\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\5\64\u01c4\n\64\3\65\3\65"+
		"\3\65\3\65\3\65\3\65\3\65\5\65\u01cd\n\65\3\u012f\2\66\3\3\5\4\7\5\t\6"+
		"\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24"+
		"\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K"+
		"\'M(O)Q*S+U,W\2Y\2[\2]-_.a/c\60e\61g\62i\63\3\2\t\4\2C\\c|\3\2\62;\3\2"+
		"\63;\4\2\f\f\17\17\5\2\13\f\17\17\"\"\6\2,-//\61\61>>\13\2*+..\60\60="+
		"=??]]__}}\177\177\u01ed\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2"+
		"\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25"+
		"\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2"+
		"\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2"+
		"\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3"+
		"\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2"+
		"\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2"+
		"Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3"+
		"\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\3k\3\2\2\2\5q\3\2\2\2\7y\3\2\2"+
		"\2\t{\3\2\2\2\13}\3\2\2\2\r\u0084\3\2\2\2\17\u0086\3\2\2\2\21\u0088\3"+
		"\2\2\2\23\u008f\3\2\2\2\25\u0094\3\2\2\2\27\u0099\3\2\2\2\31\u00a0\3\2"+
		"\2\2\33\u00a2\3\2\2\2\35\u00a4\3\2\2\2\37\u00a6\3\2\2\2!\u00a8\3\2\2\2"+
		"#\u00aa\3\2\2\2%\u00ae\3\2\2\2\'\u00b6\3\2\2\2)\u00bc\3\2\2\2+\u00cf\3"+
		"\2\2\2-\u00d6\3\2\2\2/\u00d9\3\2\2\2\61\u00de\3\2\2\2\63\u00e2\3\2\2\2"+
		"\65\u00e7\3\2\2\2\67\u00ec\3\2\2\29\u00ee\3\2\2\2;\u00f0\3\2\2\2=\u00f2"+
		"\3\2\2\2?\u00f4\3\2\2\2A\u00f6\3\2\2\2C\u00f8\3\2\2\2E\u00fa\3\2\2\2G"+
		"\u00fc\3\2\2\2I\u00ff\3\2\2\2K\u0102\3\2\2\2M\u0105\3\2\2\2O\u0108\3\2"+
		"\2\2Q\u010b\3\2\2\2S\u010e\3\2\2\2U\u0113\3\2\2\2W\u011a\3\2\2\2Y\u011c"+
		"\3\2\2\2[\u011e\3\2\2\2]\u0134\3\2\2\2_\u0139\3\2\2\2a\u0147\3\2\2\2c"+
		"\u01ac\3\2\2\2e\u01ae\3\2\2\2g\u01c3\3\2\2\2i\u01cc\3\2\2\2kl\7e\2\2l"+
		"m\7n\2\2mn\7c\2\2no\7u\2\2op\7u\2\2p\4\3\2\2\2qr\7g\2\2rs\7z\2\2st\7v"+
		"\2\2tu\7g\2\2uv\7p\2\2vw\7f\2\2wx\7u\2\2x\6\3\2\2\2yz\7}\2\2z\b\3\2\2"+
		"\2{|\7\177\2\2|\n\3\2\2\2}~\7r\2\2~\177\7w\2\2\177\u0080\7d\2\2\u0080"+
		"\u0081\7n\2\2\u0081\u0082\7k\2\2\u0082\u0083\7e\2\2\u0083\f\3\2\2\2\u0084"+
		"\u0085\7*\2\2\u0085\16\3\2\2\2\u0086\u0087\7+\2\2\u0087\20\3\2\2\2\u0088"+
		"\u0089\7u\2\2\u0089\u008a\7v\2\2\u008a\u008b\7c\2\2\u008b\u008c\7v\2\2"+
		"\u008c\u008d\7k\2\2\u008d\u008e\7e\2\2\u008e\22\3\2\2\2\u008f\u0090\7"+
		"x\2\2\u0090\u0091\7q\2\2\u0091\u0092\7k\2\2\u0092\u0093\7f\2\2\u0093\24"+
		"\3\2\2\2\u0094\u0095\7o\2\2\u0095\u0096\7c\2\2\u0096\u0097\7k\2\2\u0097"+
		"\u0098\7p\2\2\u0098\26\3\2\2\2\u0099\u009a\7U\2\2\u009a\u009b\7v\2\2\u009b"+
		"\u009c\7t\2\2\u009c\u009d\7k\2\2\u009d\u009e\7p\2\2\u009e\u009f\7i\2\2"+
		"\u009f\30\3\2\2\2\u00a0\u00a1\7]\2\2\u00a1\32\3\2\2\2\u00a2\u00a3\7_\2"+
		"\2\u00a3\34\3\2\2\2\u00a4\u00a5\7.\2\2\u00a5\36\3\2\2\2\u00a6\u00a7\7"+
		"?\2\2\u00a7 \3\2\2\2\u00a8\u00a9\7=\2\2\u00a9\"\3\2\2\2\u00aa\u00ab\7"+
		"k\2\2\u00ab\u00ac\7p\2\2\u00ac\u00ad\7v\2\2\u00ad$\3\2\2\2\u00ae\u00af"+
		"\7d\2\2\u00af\u00b0\7q\2\2\u00b0\u00b1\7q\2\2\u00b1\u00b2\7n\2\2\u00b2"+
		"\u00b3\7g\2\2\u00b3\u00b4\7c\2\2\u00b4\u00b5\7p\2\2\u00b5&\3\2\2\2\u00b6"+
		"\u00b7\7y\2\2\u00b7\u00b8\7j\2\2\u00b8\u00b9\7k\2\2\u00b9\u00ba\7n\2\2"+
		"\u00ba\u00bb\7g\2\2\u00bb(\3\2\2\2\u00bc\u00bd\7U\2\2\u00bd\u00be\7{\2"+
		"\2\u00be\u00bf\7u\2\2\u00bf\u00c0\7v\2\2\u00c0\u00c1\7g\2\2\u00c1\u00c2"+
		"\7o\2\2\u00c2\u00c3\7\60\2\2\u00c3\u00c4\7q\2\2\u00c4\u00c5\7w\2\2\u00c5"+
		"\u00c6\7v\2\2\u00c6\u00c7\7\60\2\2\u00c7\u00c8\7r\2\2\u00c8\u00c9\7t\2"+
		"\2\u00c9\u00ca\7k\2\2\u00ca\u00cb\7p\2\2\u00cb\u00cc\7v\2\2\u00cc\u00cd"+
		"\7n\2\2\u00cd\u00ce\7p\2\2\u00ce*\3\2\2\2\u00cf\u00d0\7t\2\2\u00d0\u00d1"+
		"\7g\2\2\u00d1\u00d2\7v\2\2\u00d2\u00d3\7w\2\2\u00d3\u00d4\7t\2\2\u00d4"+
		"\u00d5\7p\2\2\u00d5,\3\2\2\2\u00d6\u00d7\7k\2\2\u00d7\u00d8\7h\2\2\u00d8"+
		".\3\2\2\2\u00d9\u00da\7g\2\2\u00da\u00db\7n\2\2\u00db\u00dc\7u\2\2\u00dc"+
		"\u00dd\7g\2\2\u00dd\60\3\2\2\2\u00de\u00df\7p\2\2\u00df\u00e0\7g\2\2\u00e0"+
		"\u00e1\7y\2\2\u00e1\62\3\2\2\2\u00e2\u00e3\7v\2\2\u00e3\u00e4\7j\2\2\u00e4"+
		"\u00e5\7k\2\2\u00e5\u00e6\7u\2\2\u00e6\64\3\2\2\2\u00e7\u00e8\7p\2\2\u00e8"+
		"\u00e9\7w\2\2\u00e9\u00ea\7n\2\2\u00ea\u00eb\7n\2\2\u00eb\66\3\2\2\2\u00ec"+
		"\u00ed\7\60\2\2\u00ed8\3\2\2\2\u00ee\u00ef\7/\2\2\u00ef:\3\2\2\2\u00f0"+
		"\u00f1\7#\2\2\u00f1<\3\2\2\2\u00f2\u00f3\7\61\2\2\u00f3>\3\2\2\2\u00f4"+
		"\u00f5\7,\2\2\u00f5@\3\2\2\2\u00f6\u00f7\7-\2\2\u00f7B\3\2\2\2\u00f8\u00f9"+
		"\7>\2\2\u00f9D\3\2\2\2\u00fa\u00fb\7@\2\2\u00fbF\3\2\2\2\u00fc\u00fd\7"+
		">\2\2\u00fd\u00fe\7?\2\2\u00feH\3\2\2\2\u00ff\u0100\7@\2\2\u0100\u0101"+
		"\7?\2\2\u0101J\3\2\2\2\u0102\u0103\7?\2\2\u0103\u0104\7?\2\2\u0104L\3"+
		"\2\2\2\u0105\u0106\7#\2\2\u0106\u0107\7?\2\2\u0107N\3\2\2\2\u0108\u0109"+
		"\7(\2\2\u0109\u010a\7(\2\2\u010aP\3\2\2\2\u010b\u010c\7~\2\2\u010c\u010d"+
		"\7~\2\2\u010dR\3\2\2\2\u010e\u010f\7v\2\2\u010f\u0110\7t\2\2\u0110\u0111"+
		"\7w\2\2\u0111\u0112\7g\2\2\u0112T\3\2\2\2\u0113\u0114\7h\2\2\u0114\u0115"+
		"\7c\2\2\u0115\u0116\7n\2\2\u0116\u0117\7u\2\2\u0117\u0118\7g\2\2\u0118"+
		"V\3\2\2\2\u0119\u011b\t\2\2\2\u011a\u0119\3\2\2\2\u011bX\3\2\2\2\u011c"+
		"\u011d\t\3\2\2\u011dZ\3\2\2\2\u011e\u011f\t\4\2\2\u011f\\\3\2\2\2\u0120"+
		"\u0121\7\61\2\2\u0121\u0122\7\61\2\2\u0122\u0126\3\2\2\2\u0123\u0125\n"+
		"\5\2\2\u0124\u0123\3\2\2\2\u0125\u0128\3\2\2\2\u0126\u0124\3\2\2\2\u0126"+
		"\u0127\3\2\2\2\u0127\u0135\3\2\2\2\u0128\u0126\3\2\2\2\u0129\u012a\7\61"+
		"\2\2\u012a\u012b\7,\2\2\u012b\u012f\3\2\2\2\u012c\u012e\13\2\2\2\u012d"+
		"\u012c\3\2\2\2\u012e\u0131\3\2\2\2\u012f\u0130\3\2\2\2\u012f\u012d\3\2"+
		"\2\2\u0130\u0132\3\2\2\2\u0131\u012f\3\2\2\2\u0132\u0133\7,\2\2\u0133"+
		"\u0135\7\61\2\2\u0134\u0120\3\2\2\2\u0134\u0129\3\2\2\2\u0135\u0136\3"+
		"\2\2\2\u0136\u0137\b/\2\2\u0137^\3\2\2\2\u0138\u013a\t\6\2\2\u0139\u0138"+
		"\3\2\2\2\u013a\u013b\3\2\2\2\u013b\u0139\3\2\2\2\u013b\u013c\3\2\2\2\u013c"+
		"\u013d\3\2\2\2\u013d\u013e\b\60\3\2\u013e`\3\2\2\2\u013f\u0148\7\62\2"+
		"\2\u0140\u0144\5[.\2\u0141\u0143\5Y-\2\u0142\u0141\3\2\2\2\u0143\u0146"+
		"\3\2\2\2\u0144\u0142\3\2\2\2\u0144\u0145\3\2\2\2\u0145\u0148\3\2\2\2\u0146"+
		"\u0144\3\2\2\2\u0147\u013f\3\2\2\2\u0147\u0140\3\2\2\2\u0148b\3\2\2\2"+
		"\u0149\u014a\7e\2\2\u014a\u014b\7n\2\2\u014b\u014c\7c\2\2\u014c\u014d"+
		"\7u\2\2\u014d\u01ad\7u\2\2\u014e\u014f\7r\2\2\u014f\u0150\7w\2\2\u0150"+
		"\u0151\7d\2\2\u0151\u0152\7n\2\2\u0152\u0153\7k\2\2\u0153\u01ad\7e\2\2"+
		"\u0154\u0155\7u\2\2\u0155\u0156\7v\2\2\u0156\u0157\7c\2\2\u0157\u0158"+
		"\7v\2\2\u0158\u0159\7k\2\2\u0159\u01ad\7e\2\2\u015a\u015b\7g\2\2\u015b"+
		"\u015c\7z\2\2\u015c\u015d\7v\2\2\u015d\u015e\7g\2\2\u015e\u015f\7p\2\2"+
		"\u015f\u0160\7f\2\2\u0160\u01ad\7u\2\2\u0161\u0162\7x\2\2\u0162\u0163"+
		"\7q\2\2\u0163\u0164\7k\2\2\u0164\u01ad\7f\2\2\u0165\u0166\7k\2\2\u0166"+
		"\u0167\7p\2\2\u0167\u01ad\7v\2\2\u0168\u0169\7d\2\2\u0169\u016a\7q\2\2"+
		"\u016a\u016b\7q\2\2\u016b\u016c\7n\2\2\u016c\u016d\7g\2\2\u016d\u016e"+
		"\7c\2\2\u016e\u01ad\7p\2\2\u016f\u0170\7k\2\2\u0170\u01ad\7h\2\2\u0171"+
		"\u0172\7g\2\2\u0172\u0173\7n\2\2\u0173\u0174\7u\2\2\u0174\u01ad\7g\2\2"+
		"\u0175\u0176\7y\2\2\u0176\u0177\7j\2\2\u0177\u0178\7k\2\2\u0178\u0179"+
		"\7n\2\2\u0179\u01ad\7g\2\2\u017a\u017b\7t\2\2\u017b\u017c\7g\2\2\u017c"+
		"\u017d\7v\2\2\u017d\u017e\7w\2\2\u017e\u017f\7t\2\2\u017f\u01ad\7p\2\2"+
		"\u0180\u0181\7p\2\2\u0181\u0182\7w\2\2\u0182\u0183\7n\2\2\u0183\u01ad"+
		"\7n\2\2\u0184\u0185\7v\2\2\u0185\u0186\7t\2\2\u0186\u0187\7w\2\2\u0187"+
		"\u01ad\7g\2\2\u0188\u0189\7h\2\2\u0189\u018a\7c\2\2\u018a\u018b\7n\2\2"+
		"\u018b\u018c\7u\2\2\u018c\u01ad\7g\2\2\u018d\u018e\7v\2\2\u018e\u018f"+
		"\7j\2\2\u018f\u0190\7k\2\2\u0190\u01ad\7u\2\2\u0191\u0192\7p\2\2\u0192"+
		"\u0193\7g\2\2\u0193\u01ad\7y\2\2\u0194\u0195\7U\2\2\u0195\u0196\7v\2\2"+
		"\u0196\u0197\7t\2\2\u0197\u0198\7k\2\2\u0198\u0199\7p\2\2\u0199\u01ad"+
		"\7i\2\2\u019a\u019b\7U\2\2\u019b\u019c\7{\2\2\u019c\u019d\7u\2\2\u019d"+
		"\u019e\7v\2\2\u019e\u019f\7g\2\2\u019f\u01a0\7o\2\2\u01a0\u01a1\7\60\2"+
		"\2\u01a1\u01a2\7q\2\2\u01a2\u01a3\7w\2\2\u01a3\u01a4\7v\2\2\u01a4\u01a5"+
		"\7\60\2\2\u01a5\u01a6\7r\2\2\u01a6\u01a7\7t\2\2\u01a7\u01a8\7k\2\2\u01a8"+
		"\u01a9\7p\2\2\u01a9\u01aa\7v\2\2\u01aa\u01ab\7n\2\2\u01ab\u01ad\7p\2\2"+
		"\u01ac\u0149\3\2\2\2\u01ac\u014e\3\2\2\2\u01ac\u0154\3\2\2\2\u01ac\u015a"+
		"\3\2\2\2\u01ac\u0161\3\2\2\2\u01ac\u0165\3\2\2\2\u01ac\u0168\3\2\2\2\u01ac"+
		"\u016f\3\2\2\2\u01ac\u0171\3\2\2\2\u01ac\u0175\3\2\2\2\u01ac\u017a\3\2"+
		"\2\2\u01ac\u0180\3\2\2\2\u01ac\u0184\3\2\2\2\u01ac\u0188\3\2\2\2\u01ac"+
		"\u018d\3\2\2\2\u01ac\u0191\3\2\2\2\u01ac\u0194\3\2\2\2\u01ac\u019a\3\2"+
		"\2\2\u01add\3\2\2\2\u01ae\u01b3\5W,\2\u01af\u01b2\5W,\2\u01b0\u01b2\5"+
		"Y-\2\u01b1\u01af\3\2\2\2\u01b1\u01b0\3\2\2\2\u01b2\u01b5\3\2\2\2\u01b3"+
		"\u01b1\3\2\2\2\u01b3\u01b4\3\2\2\2\u01b4f\3\2\2\2\u01b5\u01b3\3\2\2\2"+
		"\u01b6\u01c4\t\7\2\2\u01b7\u01b8\7>\2\2\u01b8\u01c4\7?\2\2\u01b9\u01ba"+
		"\7@\2\2\u01ba\u01c4\7?\2\2\u01bb\u01c4\7@\2\2\u01bc\u01bd\7?\2\2\u01bd"+
		"\u01c4\7?\2\2\u01be\u01bf\7(\2\2\u01bf\u01c4\7(\2\2\u01c0\u01c1\7~\2\2"+
		"\u01c1\u01c4\7~\2\2\u01c2\u01c4\7#\2\2\u01c3\u01b6\3\2\2\2\u01c3\u01b7"+
		"\3\2\2\2\u01c3\u01b9\3\2\2\2\u01c3\u01bb\3\2\2\2\u01c3\u01bc\3\2\2\2\u01c3"+
		"\u01be\3\2\2\2\u01c3\u01c0\3\2\2\2\u01c3\u01c2\3\2\2\2\u01c4h\3\2\2\2"+
		"\u01c5\u01cd\t\b\2\2\u01c6\u01c7\7\61\2\2\u01c7\u01cd\7\61\2\2\u01c8\u01c9"+
		"\7\61\2\2\u01c9\u01cd\7,\2\2\u01ca\u01cb\7,\2\2\u01cb\u01cd\7\61\2\2\u01cc"+
		"\u01c5\3\2\2\2\u01cc\u01c6\3\2\2\2\u01cc\u01c8\3\2\2\2\u01cc\u01ca\3\2"+
		"\2\2\u01cdj\3\2\2\2\17\2\u011a\u0126\u012f\u0134\u013b\u0144\u0147\u01ac"+
		"\u01b1\u01b3\u01c3\u01cc\4\3/\2\3\60\3";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}